# Secrets
*.secret*


# Python
*.pyc
*.pyo
*.pyd
__pycache__/
*.so

# Packages
env/
venv/
ENV/
env.bak/
venv.bak/
.venv/
.venv.bak/

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.cache/
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
nosetests.xml
coverage/
*.coveragerc
*.pyc
.coverage
.cache
.pytest_cache/

# Jupyter Notebook
.ipynb_checkpoints/

# Environments
.env
.env.*
!.env.secret.sample
.venv
.venv/

# MyPy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Celery
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# dotenv
.env

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# pytype static type analyzer
.pytype/

# pyright static type analyzer
.pyright/

# IDEs and editors
.idea/
*.swp
*.swo
*.swn
*.bak
*.tmp
*.temp

# Logs and databases
*.log
*.sql
*.sqlite
*.sqlite3

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Django stuff:
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
media

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Test suite directories and files
.coverage
.tox/
.nox/
.coverage.*
.cache
coverage.*
.nosetests.xml
coverage.xml
*.cover
.hypothesis/
.pytest_cache/
.pytest_cache/
.tox/
.pytest_cache/
.nox/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery
celerybeat-schedule
celerybeat.pid

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
# Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially true for open source projects since poetry.lock ensures reproducible installs
#   and fixes the versions of dependencies.
# poetry.lock

# PDM
__pypackages__/

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
# Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially true for open source projects since poetry.lock ensures reproducible installs
#   and fixes the versions of dependencies.
# poetry.lock

# PDM
__pypackages__/

# pyflow
__pypackages__/

# pip-tools
#   It is generally recommended to include *.txt in version control.
#   It is also recommended to include *.in files since they are the source of
#   truth for dependency management.
*.txt

# .vscode directory
.vscode/*

# Pylint
pylint-report.txt
pylint-output.txt

# Mypy
.mypy_cache/

# pytype
.pytype/

# Pyre
.pyre/

# pyright
.pyright/

# VSCode
.vscode/

# Pycharm
.idea/
*.iml

# JupyterLab
.jupyterlab/

# Spyder
.spyderproject

# Rider
.idea/
*.iml
*.ipr
*.iws
.idea/
.idea/*/workspace.xml
.idea/*/tasks.xml
.idea/dictionaries

# Eclipse
.metadata
*.log
.metadata/*

# Ignore WAV files
*.wav
!code-monkey/src/audio/test/test.wav

# Ignore mock test files
/code-monkey/src/tests/mock_files/

# Ignore the ruff cache
.ruff_cache/

# Our own stuff
artifacts/
.prompt.md



# Dependency directories
node_modules/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TypeScript output
dist/
out/

# IDE / Editor
.idea/
.vscode/
*.swp
*.swo

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
